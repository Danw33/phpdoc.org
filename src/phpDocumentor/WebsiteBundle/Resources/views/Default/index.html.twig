{% extends '::layout.html.twig' %}

{% block title %}phpDocumentor 2{% endblock %}

{% block body %}
{% include '::hero.html.twig' %}

<div class="row content">
  <div class="span4">
    <div class="well">
      <h1>Modern</h1>
      phpDocumentor 2 is build to generate API documentation for all features available in PHP 5.3 and higher.<br />
    </div>
  </div>
  <div class="span4">
    <div class="well">
      <h1>Easy installation</h1>
      Using PEAR you only need two commands to rule them all:<br />
      <pre><code>$ pear channel-discover pear.phpdoc.org
$ pear install phpdoc/phpDocumentor-alpha</code></pre>
        <a href="/docs/latest/for-users/installation.html" style="float: right;">Read more ..</a>
    </div>
  </div>
  <div class="span4">
    <div class="well">
      <h1>Easier usage</h1>
      A single command is all it takes to generate documentation for your current folder to the folder 'docs':
      <pre><code>$ phpdoc -d . -t docs</code></pre>
        <a href="/docs/latest/for-users/basic-usage.html" style="float: right;">Read more ..</a>
    </div>
  </div>
</div>

<div >
  <div class="row content">
    <div class="span3"><div class="padded">
      <img src="{{ asset('bundles/phpdocumentorwebsite/images/logo-trans.png') }}" />
    </div></div>
    <div class="span9">
      <div class="well">
        <h1>What is phpDocumentor 2?</h1>
        <p>phpDocumentor 2 is a tool with which it is possible to generate documentation from your PHP source code. With this
        documentation you can provide your consumers with more information regarding the functionality embedded within
        your source and not only what is usable to them from your user interface.</p>

        <p>Documentation generated by phpDocumentor 2 does not aim to be a replacement for conventional documentation but
        is rather supplemental, or reference, documentation.</p>

        <p>This documention can prove to be very useful in the following, example, situations:</p>

        <ul>
          <li>Sets of libraries or applications providing an API, such as phpDocumentor 2 itself</li>
          <li>Frameworks, such as Zend Framework or Symfony</li>
          <li>Pluggable architectures, such as WordPress or PyroCMS</li>
          <li>Long-running, complex projects, to help you find the right function or method for the job</li>
        </ul>

          <h1>High performance</h1>
          phpDocumentor 1 needs <strong style="color: maroon">220</strong> seconds to generate documentation for
          <a href="http://www.phing.info"><em>phing</em></a>.<br />
          A bare <span style="font-family: 'Forum'; font-size: 1.2em;">phpDocumentor 2</span> run needs
          <strong style="color: orange">120</strong> seconds and with optimalizations this can even be reduced to less than
          <strong style="color: green">90</strong> seconds!
        </div>
      </div>
  </div>

  <div class="row content">
    <div class="span3">
      <div class="padded">
        <img src="{{ asset('bundles/phpdocumentortemplate/images/thumbnails/responsive.png') }}" />
      </div>
    </div>
    <div class="span9">
      <div class="well">
        <h1>Template System</h1>
        <p>phpDocumentor 2 contains an incredibly flexible template system which enabled you to alter your output in any
        way imaginable. This can range from simply applying your own branding for the HTML output by merely altering
        a couple of CSS files to determining which types of output are generated and where they are made available.</p>
      </div>
    </div>
  </div>

  <div class="row content">
    <div class="span3">
      <div class="padded">
        <img src="{{ asset('bundles/phpdocumentortemplate/images/thumbnails/responsive.png') }}" />
      </div>
    </div>
    <div class="span9">
      <div class="well">
        <h1>Reports & Charts</h1>
        <p>phpDocumentor 2 is capable of extracting interesting information and present those in the form of graphs and
        reports. The following are currently supported:</p>
        <ul>
          <li>An inheritance diagram showing all subclassing and implementing of interfaces.</li>
          <li>Reporting errors in your source code's inline documentation</li>
          <li>Reporting which elements are marked as deprecated</li>
          <li>Reporting where TODO's are placed in your code and what is to be done</li>
        </ul>
        <p>This list will only grow in the future to help you determine where to invest your resources in order to make
        your code more stable and maintainable.</p>
      </div>
    </div>
  </div>

  <div class="row content">
    <div class="span3">
      <div class="padded">
        <img src="{{ asset('bundles/phpdocumentortemplate/images/thumbnails/responsive.png') }}" />
      </div>
    </div>
    <div class="span9">
      <div class="well">
        <h1>Plugins</h1>
        <p>phpDocumentor 2 is build with extendability in mind. Using ideas from Aspect Oriented Development (AoP)
        that are powered by the Event Dispatcher by symfony are phpDocumentor 2 Plugins one of the more powerful
        tools in the toolset.</p>
      </div>
    </div>
  </div>

</div>

{% endblock %}
